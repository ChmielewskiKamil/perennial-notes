@startuml PerennialArchitecture

left to right direction

skinparam linetype ortho
skinparam nodesep 40
skinparam ranksep 40

skinparam note {
    BorderColor black
    BackgroundColor white
    FontColor black
}
skinparam component {
    FontSize 25
    BackgroundColor lightgray
}

skinparam collections {
    FontSize 20
}

skinparam package {
    BorderColor black
    BackgroundColor lightblue
}

/' Actors '/
actor Liquidators
actor Makers
actor Takers
actor "Market Operator" as MarketOperator
actor Admin
actor Pauser

/' //////////////////////////////////////////////////////////////////
//                           Core Contracts                        //
////////////////////////////////////////////////////////////////// '/

component Market

component Collateral

component MultiInvoker 

component ChainlinkOracle 

component Incentivizer 

component Controller 

component ProductProvider 

/' //////////////////////////////////////////////////////////////////
//                       Contract Functions                        //
////////////////////////////////////////////////////////////////// '/

/'Collateral'/
rectangle deposit <<depositTo>>
rectangle withdrawFrom <<withdrawFrom>>
rectangle withdrawTo <<withdrawTo>>
rectangle liquidate <<liquidate>>
rectangle "Settle Account" as settleAccount <<settleAccount>>
rectangle "Settle Product" as settleProduct <<settleProduct>>
rectangle "Resolve Shortfall" as resolveShortfall <<resolveShortfall>>
rectangle "Claim Fees" as claimFee <<claimFee>>

/'Market'/
rectangle "Open Take Position" as openTake <<openTake>>
rectangle "Close Take Position" as closeTake <<closeTake>>
rectangle "Open Make Position" as openMake <<openMake>>
rectangle "Close Make Position" as closeMake <<closeMake>>
rectangle "Settle" as settle <<settle>>
rectangle "Close All Positions" as closeAll <<closeAll>>
rectangle "Close / Open Market" as updateClosed <<updateClosed>>
rectangle "Update Market Oracle" as updateOracle <<updateOracle>>

/'Controller'/
rectangle "Add new Product Provider" as createCoordinator <<createCoordinator>>
rectangle "Update the owner of the Product Provider" as updateCoordinator <<updateCoordinatorPendingOwner>>
rectangle "Update the treasury address of the Product Provider" as updateTreasury <<updateCoordinatorTreasury>>
rectangle "Updating Core Protocol Parameters" as UPDATE_PROTOCOL_PARAMS {
    rectangle "Update Collateral contract address" as updateCollateral <<updateCollateral>>
    rectangle "Update Incentivizer contract address" as updateIncentivizer <<updateIncentivizer>>
    rectangle "Update Product Implementation Beacon" as updateProductBeacon <<updateProductBeacon>>
    rectangle "Update Multi Invoker address" as updateMultiInvoker <<updateMultiInvoker>>
    rectangle "Update Protocol - Product fee split" as updateProtocolFee <<updateProtocolFee>>
    rectangle "Update minimum Funding rate" as updateMinFundingRate <<updateMinFundingRate>>
    rectangle "Update liquidation fee" as updateLiquidationFee <<updateLiquidationFee>>
    rectangle "Update incentivization fee" as updateIncentivizationFee <<updateIncentivizationFee>>
    rectangle "Update minimum user collateral" as updateMinCollateral <<updateMinCollateral>>
    rectangle "Update max incentivization programs per product" as updateProgramsPerProduct <<updateProgramsPerProduct>>
    rectangle "Update Pauser address" as updatePauser <<updatePauser>>
}
rectangle "Pause / Unpause the protocol" as pause <<updatePaused>>

/' //////////////////////////////////////////////////////////////////
//                           Connections                           //
////////////////////////////////////////////////////////////////// '/

'Collateral contract functions'
deposit --> Collateral
withdrawTo --> Collateral
withdrawFrom --> Collateral
withdrawTo --> withdrawFrom
liquidate --> Collateral
settleAccount --> Collateral
settleProduct --> Collateral
claimFee --> Collateral
resolveShortfall --> Collateral
'Calls to Collateral contract functions'
Makers --> deposit
Makers --> withdrawTo
Makers --> withdrawFrom
Liquidators --> liquidate
Market --> settleAccount 
Market --> settleProduct 
MarketOperator --> resolveShortfall

'Market functions'
openMake --> Market
closeMake --> Market
openTake --> Market
closeTake --> Market
settle --> Market
closeAll --> Market
updateClosed --> Market
updateOracle --> Market
'Calls to Market contract functions'
Makers --> openMake 
Makers --> closeMake 
Takers --> openTake
Takers --> closeTake
Collateral --> closeAll
MarketOperator --> updateClosed
MarketOperator --> updateOracle

'Controller functions'
createCoordinator --> Controller
updateCoordinator --> Controller
updateTreasury --> Controller
UPDATE_PROTOCOL_PARAMS --> Controller
pause --> Controller

'Calls to Controller functions'
ProductProvider --> createCoordinator: ?
ProductProvider --> updateCoordinator
ProductProvider --> updateTreasury
Admin --> UPDATE_PROTOCOL_PARAMS
Pauser --> pause

/' //////////////////////////////////////////////////////////////////
//                             Notes                               //
////////////////////////////////////////////////////////////////// '/

note bottom of settleAccount: Moves collateral within the product 
note top of settleProduct: Removes collateral\nfrom the product as fees
note right of MultiInvoker: Allows batch calls
note right of Market: In V1 known as Product
note left of Makers: Liquidity Providers
note left of Takers: Traders
note bottom of resolveShortfall: Market Operator or Insurer can re-capitalize insolvent market
note bottom of createCoordinator: This can be called by anyone

footer Perennial Protocol Architecture | author: @kamilchmielu
@enduml
